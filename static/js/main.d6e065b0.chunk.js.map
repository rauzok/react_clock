{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","setState","interval","setInterval","date","console","log","prevProps","newClockName","props","clearTimeout","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZC,SAAUC,aAAY,WACpB,EAAKF,SAAS,CAAEG,KAAM,IAAIN,OAE1BO,QAAQC,IAAI,EAAKV,MAAMQ,KAAKL,wBAC3B,SAXT,gCAeE,SAAmBQ,GACbA,EAAUC,eAAiBR,KAAKS,MAAMD,cAExCH,QAAQC,IAAI,wCACNC,EAAUC,aADJ,eACuBR,KAAKS,MAAMD,iBAnBpD,kCAuBE,WACEE,aAAaV,KAAKJ,MAAMM,YAxB5B,oBA2BE,WACE,OACE,8BACGF,KAAKJ,MAAMC,UA9BpB,GAA2Bc,IAAMC,WCkDlBC,G,kNA9CbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,K,EAGlCI,cAAgB,WACd,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,MAAM,IAAAD,KAAKE,SAAyB,Q,4CAGtE,WACE,MAAsCrB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,kDAAoBP,GAAa,KACjC,+BACA,2BACG,iBACAD,GAAkB,kBAAC,EAAD,CAAON,aAAcR,KAAKJ,MAAMmB,aAIrD,4BAAQQ,KAAK,SAASC,QAASxB,KAAKgB,WAApC,cAIA,4BAAQO,KAAK,SAASC,QAASxB,KAAKiB,WAApC,cAIA,4BAAQM,KAAK,SAASC,QAASxB,KAAKkB,eAApC,wB,GAvCUP,IAAMC,YCFxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d6e065b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.setState({\n      interval: setInterval(() => {\n        this.setState({ date: new Date() });\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.newClockName !== this.props.newClockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from`\n      + ` ${prevProps.newClockName} to ${this.props.newClockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.interval);\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.time}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  newClockName: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Clock } from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * (999 - 100) + 100) });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`React clock ${clockName || ''}`}</h1>\n        <span />\n        <p>\n          {'Current time: '}\n          {isClockVisible && <Clock newClockName={this.state.clockName} />}\n          {}\n        </p>\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}